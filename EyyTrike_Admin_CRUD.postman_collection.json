{
  "info": {
    "name": "EyyTrike Admin CRUD",
    "description": "Complete CRUD operations for User management with admin authentication",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000/api",
      "type": "string"
    },
    {
      "key": "adminToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "testUserId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('adminToken', response.token);",
                  "    console.log('Admin token saved:', response.token);",
                  "    console.log('Admin user:', response.user);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@eyytrike.com\",\n  \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            },
            "description": "Login as admin to get authentication token"
          }
        },
        {
          "name": "Register New User (with new name structure)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"middleName\": \"Michael\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"password123\",\n  \"phoneNumber\": \"+1234567890\",\n  \"role\": \"commuter\",\n  \"address\": {\n    \"street\": \"123 Main Street\",\n    \"city\": \"Naga City\",\n    \"province\": \"Camarines Sur\",\n    \"postalCode\": \"4400\",\n    \"country\": \"Philippines\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            },
            "description": "Register a new user with the new name structure (firstName, lastName, middleName)"
          }
        }
      ]
    },
    {
      "name": "User CRUD Operations",
      "item": [
        {
          "name": "CREATE - Create New User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('testUserId', response._id);",
                  "    console.log('Test user created with ID:', response._id);",
                  "    console.log('User details:', response);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Jane\",\n  \"lastName\": \"Smith\",\n  \"middleName\": \"Elizabeth\",\n  \"email\": \"jane.smith@test.com\",\n  \"password\": \"password123\",\n  \"phoneNumber\": \"+1234567890\",\n  \"role\": \"commuter\",\n  \"address\": {\n    \"street\": \"456 Oak Avenue\",\n    \"city\": \"Legazpi City\",\n    \"province\": \"Albay\",\n    \"postalCode\": \"4500\",\n    \"country\": \"Philippines\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            },
            "description": "Create a new user (Admin only)"
          }
        },
        {
          "name": "CREATE - Create Driver User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Mike\",\n  \"lastName\": \"Johnson\",\n  \"middleName\": \"David\",\n  \"email\": \"mike.johnson@test.com\",\n  \"password\": \"password123\",\n  \"phoneNumber\": \"+0987654321\",\n  \"role\": \"driver\",\n  \"licenseNumber\": \"DL123456\",\n  \"address\": {\n    \"street\": \"789 Pine Street\",\n    \"city\": \"Iriga City\",\n    \"province\": \"Camarines Sur\",\n    \"postalCode\": \"4431\",\n    \"country\": \"Philippines\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            },
            "description": "Create a new driver user with license number"
          }
        },
        {
          "name": "READ - Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get all users with pagination (Admin only)"
          }
        },
        {
          "name": "READ - Get All Users (Filtered by Role)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users?role=driver&page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["users"],
              "query": [
                {
                  "key": "role",
                  "value": "driver"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get all users filtered by role"
          }
        },
        {
          "name": "READ - Search Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users?search=John&page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["users"],
              "query": [
                {
                  "key": "search",
                  "value": "John"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Search users by name, email, or phone number"
          }
        },
        {
          "name": "READ - Get User by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/{{testUserId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{testUserId}}"]
            },
            "description": "Get a specific user by ID (Admin only)"
          }
        },
        {
          "name": "UPDATE - Full Update User (PUT)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Jane\",\n  \"lastName\": \"Smith\",\n  \"middleName\": \"Elizabeth\",\n  \"email\": \"jane.smith.updated@test.com\",\n  \"phoneNumber\": \"+1111111111\",\n  \"role\": \"driver\",\n  \"approvalStatus\": \"approved\",\n  \"licenseNumber\": \"DL654321\",\n  \"address\": {\n    \"street\": \"456 Updated Street\",\n    \"city\": \"Naga City\",\n    \"province\": \"Camarines Sur\",\n    \"postalCode\": \"4400\",\n    \"country\": \"Philippines\"\n  },\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{testUserId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{testUserId}}"]
            },
            "description": "Full update of a user (Admin only)"
          }
        },
        {
          "name": "UPDATE - Partial Update User (PATCH)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Jane\",\n  \"middleName\": \"E.\",\n  \"phoneNumber\": \"+2222222222\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{testUserId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{testUserId}}"]
            },
            "description": "Partial update of a user (Admin only)"
          }
        },
        {
          "name": "DELETE - Soft Delete User (Deactivate)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/{{testUserId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{testUserId}}"]
            },
            "description": "Soft delete (deactivate) a user (Admin only)"
          }
        },
        {
          "name": "DELETE - Hard Delete User (Permanent)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/{{testUserId}}/hard",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{testUserId}}", "hard"]
            },
            "description": "Hard delete (permanent removal) a user (Admin only)"
          }
        }
      ]
    },
    {
      "name": "Error Testing",
      "item": [
        {
          "name": "Test Unauthorized Access",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            },
            "description": "Test unauthorized access (should return 401)"
          }
        },
        {
          "name": "Test Invalid Token",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer invalid-token"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            },
            "description": "Test with invalid token (should return 401)"
          }
        },
        {
          "name": "Test Invalid User ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/invalid-id",
              "host": ["{{baseUrl}}"],
              "path": ["users", "invalid-id"]
            },
            "description": "Test with invalid user ID (should return 400)"
          }
        },
        {
          "name": "Test Non-existent User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/507f1f77bcf86cd799439011",
              "host": ["{{baseUrl}}"],
              "path": ["users", "507f1f77bcf86cd799439011"]
            },
            "description": "Test with non-existent user ID (should return 404)"
          }
        }
      ]
    },
    {
      "name": "User Profile Operations",
      "item": [
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["users", "profile"]
            },
            "description": "Get current user profile"
          }
        },
        {
          "name": "Update User Profile",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Admin\",\n  \"lastName\": \"User\",\n  \"middleName\": \"Updated\",\n  \"phoneNumber\": \"+639123456789\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["users", "profile"]
            },
            "description": "Update current user profile"
          }
        }
      ]
    }
  ]
}
